name: Push Release Notes to Beamer and Discord

on:
  workflow_dispatch

jobs:
  push-release-notes:
    runs-on: ubuntu-latest
    steps:
      - name: Get Latest Release
        id: get_latest_release
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install requests
          python3 - <<EOF
          import os
          import requests
          import json
          
          github_token = os.getenv('GITHUB_TOKEN')
          repo_owner = 'akto-api-security'
          repo_name = 'akto'
          headers = {'Authorization': f'Bearer {github_token}'}
          url = f'https://api.github.com/repos/{repo_owner}/{repo_name}/releases/tags/vv1.30.0'
          response = requests.get(url, headers=headers)
          data = response.json()

          tag_name = data.get('tag_name')
          description = data.get('body')
          print("description", description)
          description_lines = description.split('\n') if description else []
          description_lines = [line.strip() for line in description_lines if line.strip()]

          slack_message_body = "{ 'blocks': [ { 'type': 'header', 'text': { 'type': 'plain_text', 'text': "
          slack_message_body += repo_name
          slack_message_body += " } }, { 'type': 'section', 'text': { 'type': 'mrkdwn', 'text': "
          slack_message_body += tag_name
          slack_message_body += " } }, { 'type': 'section', 'text': { 'type': 'mrkdwn', 'text': '"
          slack_message_body += (''.join(description_lines))
          slack_message_body += "' } } ] }"

          print("slack_message_body", slack_message_body)
          
          print(f"::set-output name=tag_name::{tag_name}")
          print(f"::set-output name=slack_message_body::{slack_message_body}")
          EOF
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Print Tag Name and Description
        run: |
          echo "Tag Name: ${{ steps.get_latest_release.outputs.tag_name }}"
          echo "Description: ${{ steps.get_latest_release.outputs.slack_message_body }}"

      - name: Send Github release notification to Slack
        id: slack
        uses: slackapi/slack-github-action@v1.23.0
        with:
          payload: |
            ${{steps.get_latest_release.outputs.slack_message_body}}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK

